{% extends 'PA036SocialNetworkBundle:Group:groupBase.html.twig' %}

{% block title "page title" %}

{% block head %}

{{ parent() }}

<script type="text/javascript">

    function getPostElement(post) {
        var $leftHeading = $('<div class="col-md-6"></div>').text(post['author']);

        var $rightHeading = $('<div class="col-md-6 text-right"></div>');
        $rightHeading.append('<span class="glyphicon glyphicon-time text-right"></span>');
        $rightHeading.append(' <span>' + post['timestamp'] + '</span>');

        var $postHeading = $('<div class="panel-heading"><div class="container"></div></div>');
        $postHeading.append($('<div class="row"></div>').append($leftHeading).append($rightHeading));

        var $postBody = $('<div class="panel-body"></div>').text(post['text']);
        $postBody.append($('<div class="like"></div>')
                .append('<a href="#">Like</a>')
                .append(' <span class="count badge">' + post['likesCount'] + '</span>')
        );

        var $postPanel = $('<div class="post panel panel-default"></div>').attr('id', post['postId']);
        $postPanel.append($postHeading);
        $postPanel.append($postBody);

        return $postPanel;
    }

    function getCommentElement(comment) {
        var $comment = $('<li class="comment list-group-item"></li>');

        $comment.append($('<span class="author"></span>').text(comment['author']));
        $comment.append(' <span class="glyphicon glyphicon-time"></span>');
        $comment.append(' <span class="timestamp">' + comment['timestamp'] + '</span><br />');

        var $commentText = $('<span class="text"></span>').text(comment['text']);
        $comment.append($commentText);

        return $comment;
    }

    function updatePosts() {
        var groupId = '';
        {% if app.request.get('group_id') != '' %}
        groupId = {{ app.request.get('group_id') }};
        {% endif %}
        //$('#group .loading').show();

        $.post("{{ path('posts') }}", {group_id: groupId})
                .done(function(data) {
            var response = jQuery.parseJSON(data);

            var posts = response.posts;

            var count = Object.keys(posts).length;
            var i = 1;
            var order = [];
            for (var key in posts) {
                order[count-i] = posts[key];
                i++;
            }

            //posts = order;

            $('#posts').html('');
            for (var key in posts) {
                var post = posts[key];
                var only_post = post['post'];
                var only_comments = post['comments'];

                var $postPanel = getPostElement(only_post);
                var $comments = $('<ul class="comments list-group"></ul>').appendTo($postPanel);

                if (only_comments !== undefined) {
                    
                    // ORDER comments
                    /*only_comments.sort(function(a, b){

                        var post1 = a.postId, post2 = b.postId;
                        if(post1 === post2) return 0;
                        return post1 < post2 ? 1: -1;
                    });*/
                
                    for (var key in only_comments) {
                        var $comment = getCommentElement(only_comments[key]);
                        $comments.append($comment);
                    }
                }

                $postPanel.append($('<div class="comment-add"></div>')
                        .append('<input type="text" name="form_text" class="form-control input-sm"' +
                                'placeholder="Write a comment..." />')
                );

                $postPanel.prependTo('#posts');
            }
        });
    }


    $(document).ready(function() {

        $(document.body).on('click', '.like a', function(event) {
            event.preventDefault();

            var post_id = $(this).parents('.post').attr('id');

            $.post("{{ path('posts_like') }}", {post_id: post_id})
                    .done(function (data) {
                        var response = jQuery.parseJSON(data);
                        $('#' + post_id).find('.like .count').html(response.post.like_count);
                    });
        });

        $(document.body).on('keyup', '#posts input', function(event) {
            if (event.keyCode === 13) {
                var groupId = '';
                {% if app.request.get('group_id') != '' %}
                groupId = {{ app.request.get('group_id') }};
                {% endif %}

                var $input = $(this);
                var comment = $input.val();
                var parent_id = $input.parent().parent().attr("id");

                $.post("{{ path('post_add') }}",
                        {form_text: comment, parent_id: parent_id, group_id: groupId})
                        .done(function (data) {

                            var response = jQuery.parseJSON(data);

                            if (response.status === "true") {
                                var $comment = getCommentElement(response.post);

                                $input.parent().siblings('.comments').append($comment);
                                $input.val("");
                            }
                        });
            }
        });

        $('#form_add').click(function() {
            var groupId = '';
            {% if app.request.get('group_id') != '' %}
            groupId = {{ app.request.get('group_id') }};
            {% endif %}
            var text = $('#form_text').val();

            var data = new FormData();
            $.each($('#post_add').find("input[type='file']"), function(i, tag) {
                $.each($(tag)[0].files, function(i, file) {
                    data.append(tag.name, file);
                });
            });
            data.append("form_text", text);
            data.append("group_id", groupId);

            $.ajax({
                url: "{{ path('post_add') }}",
                data: data,
                cache: false,
                contentType: false,
                processData: false,
                type: 'POST',
                success: function(data) {
                    var response = jQuery.parseJSON(data);
                    if (response.status === "true") {
                        $('#form_text').val("");
                        $('#form_file').val("");
                        
                        updatePosts();
                    }
                }
            });

            return false;
        });
    });

    $(document).ready(function() {
        updatePosts();
    });

    </script>

{% endblock %}

{% block content %}
    <div class="col-md-9">
        <div id="post_add">
            {{ form_start(form_post_add, {'attr': {'enctype': 'multipart/form-data', 'method': 'post'} }) }}
                {{ form_errors(form_post_add) }}

                <div class="form-group">
                    {{ form_label(form_post_add.text) }}
                    {{ form_errors(form_post_add.text) }}
                    {{ form_widget(form_post_add.text, {'attr': {'class': 'input-lg' }}) }}
                </div>

                <div class="form-group">
                    <input type="file" id="form_file" name="form_file"/>
                </div>

                <div>
                    {{ form_widget(form_post_add.add, {'attr': {'class': 'btn btn-large btn-primary' }}
                    ) }}
                </div>

            {{ form_end(form_post_add) }}
        </div>
        <div id="posts">

        </div>
        {# include 'PA036SocialNetworkBundle:Post:posts.html.twig' #}
    </div>
{% endblock %}